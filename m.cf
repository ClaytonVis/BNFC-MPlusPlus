rules Prog ::= Block ;

rules Block ::= Declarations Program_Body ;

rules Declarations ::= Declaration ";" Declarations
                     | ;

rules Declaration ::= Var_Declaration
                    | Fun_Declaration ;

rules Var_Declaration ::= "var" ID Array_Dimensions ":" Type ;

rules Type ::= "int"
    | "real"
    | "bool" ;

rules Array_Dimensions ::= "[" Expr "]" Array_Dimensions
                         | ;

rules Fun_Declaration ::= "fun" ID Param_List ":" Type "{" Fun_Block "}" ;

rules Fun_Block ::= Declarations Fun_Body ;

rules Param_List ::= "(" Parameters ")" ;

rules Parameters ::= Basic_Declaration More_Parameters
                   | ;

rules More_Parameters ::= "," Basic_Declaration More_Parameters
                        | ;

rules Basic_Declaration ::= ID Basic_Array_Dimensions ":" Type ;

rules Basic_Array_Dimensions ::= "[" "]" Basic_Array_Dimensions
                               | ;

rules Program_Body ::= "begin" Prog_Stmts "end" ;

rules Fun_Body ::= "begin" Prog_Stmts "return" Expr ";" "end" ;

rules Prog_Stmts ::= Prog_Stmt ";" Prog_Stmts
                   | ;

rules Prog_Stmt ::= "if" Expr "then" Prog_Stmt "else" Prog_Stmt 
                  | "while" Expr "do" Prog_Stmt 
                  | "read" Identifier
                  | Identifier ":=" Expr 
                  | "print" Expr 
                  | "{" Block "}" ;

rules Identifier ::= ID Array_Dimensions ;

rules Expr ::= Expr "||" BInt_Term
             | BInt_Term ;

rules BInt_Term ::= BInt_Term "&&" BInt_Factor
                  | BInt_Factor ;

rules BInt_Factor ::= "not" BInt_Factor
                    | Int_Expr Compare_Op Int_Expr
                    | Int_Expr ;

rules Compare_Op ::= "="
                   | "<"
                   | ">"
                   | "=<"
                   | ">=" ;

rules Int_Expr ::= Int_Expr Addop Int_Term
                 | Int_Term ;

rules Addop ::= "+"
              | "-" ;

rules Int_Term ::= Int_Term Mulop Int_Factor 
                 | Int_Factor ;

rules Mulop ::= "*" 
              | "/" ;

rules Int_Factor ::= "(" Expr ")" 
                   | "size" "(" ID Basic_Array_Dimensions ")" 
                   | "float" "(" Expr ")" 
                   | "floor"  "(" Expr ")" 
                   | "ceil" "(" Expr ")" 
                   | ID Modifier_List 
                   | IVAL 
                   | RVAL 
                   | BVAL 
                   | "-" Int_Factor ;

rules Modifier_List ::= "(" Arguments ")"
                      | Array_Dimensions ;

rules Arguments ::= Expr More_Arguments 
                  | ;
rules More_Arguments ::= "," Expr More_Arguments 
                       | ;

comment "%" ;
comment "/*" "*/" ;

token ID (letter ('_' | letter | digit )*) ;
token IVAL digit+ ;
token RVAL (digit+ '.' digit+) ;
token BVAL ({"true"} | {"false"}) ;
